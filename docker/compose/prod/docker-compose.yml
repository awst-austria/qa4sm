version: "3.9"
services:      
  qa4sm-db:
    image: "postgres:10"
    restart: always
    environment:
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
    volumes:
      - type: bind
        source: "${QA4SM_WORKSPACE}db/log"
        target: /var/log
      - type: bind
        source: "${QA4SM_WORKSPACE}db/data"
        target: /var/lib/postgresql/data
        
  qa4sm-redis:
    image: "redis:alpine"
    restart: always
  
  qa4sm-rabbitmq:
    image: "rabbitmq"
    restart: always

  web:
    image: "awst/qa4sm:2.0.3.2"
    restart: always
    environment:
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      PGPASSWORD: "${POSTGRES_PASSWORD}"
      QA4SM_DB_NAME: "${QA4SM_DB_NAME}"
      QA4SM_DB_USER: "${QA4SM_DB_USER}"
      QA4SM_DB_PASSWORD: "${QA4SM_DB_PASSWORD}"
      QA4SM_DB_HOST: "${QA4SM_DB_HOST}"

    volumes:
      - type: bind
        source: "${QA4SM_WORKSPACE}webapp/log"
        target: /var/log
      - type: bind
        source: "${QA4SM_WORKSPACE}webapp/output"
        target: /var/lib/qa4sm-web-val/valentina/output
      - type: bind
        source: "${QA4SM_WORKSPACE}webapp/settings/settings_conf.py"
        target: /var/lib/qa4sm-web-val/valentina/valentina/settings_conf.py
      - type: bind
        source: "${QA4SM_DATA_FOLDER}"
        target: /var/lib/qa4sm-web-val/valentina/data

  proxy:
    image: "awst/qa4sm-proxy:2.0.3.2"
    restart: always
    ports:
      - "8080:80"
  ui:
    image: "awst/qa4sm-ui:2.0.3.2"
    restart: always

  worker-1:
    image: "awst/qa4sm-worker:2.0.3.2"
    restart: always
    environment:
      QA4SM_DB_HOST: "${QA4SM_DB_HOST}"
      QA4SM_CELERY_WORKERS: "${QA4SM_WORKER_THREAD_PER_NODE}"
    volumes:
      - type: bind
        source: "${QA4SM_WORKSPACE}celery-w1/log"
        target: /var/log
      - type: bind
        source: ${QA4SM_WORKSPACE}webapp/settings/settings_conf.py
        target: /var/lib/qa4sm-web-val/valentina/valentina/settings_conf.py
      - type: bind
        source: "${QA4SM_DATA_FOLDER}"
        target: /var/lib/qa4sm-web-val/valentina/data
    deploy:
      resources:
        limits:
          memory: 250G
